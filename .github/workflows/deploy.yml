name: Deploy to AWS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      
      - name: Prepare Lambda package
        run: |
          chmod +x prepare-lambda.sh
          ./prepare-lambda.sh
      
      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file cloudformation.yaml \
            --stack-name text-to-sql-chatbot \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              SecretName=text-to-sql-chatbot-secrets \
            --region ap-south-1
      
      - name: Get deployment outputs
        id: get-outputs
        run: |
          # Using the new environment file approach instead of set-output
          OUTPUTS=$(aws cloudformation describe-stacks \
            --stack-name text-to-sql-chatbot \
            --query "Stacks[0].Outputs" \
            --output json \
            --region ap-south-1)
          echo "STACK_OUTPUTS<<EOF" >> $GITHUB_ENV
          echo "$OUTPUTS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Display outputs in table format for readability in logs
          aws cloudformation describe-stacks \
            --stack-name text-to-sql-chatbot \
            --query "Stacks[0].Outputs" \
            --output table \
            --region ap-south-1
      
      - name: Display API Endpoint
        run: |
          API_ENDPOINT=$(echo '${{ env.STACK_OUTPUTS }}' | jq -r '.[] | select(.OutputKey=="ApiEndpoint") | .OutputValue')
          echo "Your API is deployed at: $API_ENDPOINT"
          echo "API_ENDPOINT=$API_ENDPOINT" >> $GITHUB_ENV
